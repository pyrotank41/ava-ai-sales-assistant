name: Continuous Deployment
on:
  push:
    branches: [ main ]

env:
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  AZURE_CONTAINER_REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
  CONTAINER_APP_NAME: ${{ secrets.CONTAINER_APP_NAME }}
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
  BLOB_URL: ${{ secrets.BLOB_URL }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: 'Login to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v2

      - name: 'Login to Azure Container Registry'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: 'Build and push image to ACR'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_NAME }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_NAME }}:latest
          cache-to: type=inline

      - name: 'Deploy to Azure Container App'
        uses: azure/container-apps-deploy-action@v1
        with:
          appSourcePath: ${{ github.workspace }}
          acrName: ${{ env.AZURE_CONTAINER_REGISTRY }}
          acrUsername: ${{ env.REGISTRY_USERNAME }}
          acrPassword: ${{ env.REGISTRY_PASSWORD }}
          containerAppName: ${{ env.CONTAINER_APP_NAME }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_NAME }}:${{ github.sha }}
          environmentVariables: |
            BLOB_URL=${{ secrets.BLOB_URL }}
            ENVIRONMENT=production
          targetPort: 8080
          ingress: 'external'
          containerAppEnvironment: ${{ secrets.CONTAINER_APP_ENVIRONMENT }}

      - name: 'Configure Liveness Probe'
        run: |
          az containerapp update \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --probe-liveness \
              http \
              --probe-liveness-path /health \
              --probe-liveness-port 8080 \
              --probe-liveness-interval 10 \
              --probe-liveness-timeout 5 \
              --probe-liveness-failure-count 3

      - name: 'Azure logout'
        run: |
          az logout